{% doc %}
  @prompt
    collection slider

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-slider-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.section_padding }}px 0;
  }

  .ai-collection-slider__container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-collection-slider__header-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
    margin-bottom: 40px;
  }

  .ai-collection-slider__title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    color: {{ block.settings.title_color }};
    margin: 0 0 16px;
    font-family: {{ block.settings.title_font.family }}, {{ block.settings.title_font.fallback_families }};
    font-weight: {{ block.settings.title_font.weight }};
  }

  .ai-collection-slider__subtitle-{{ ai_gen_id }} {
    font-size: {{ block.settings.subtitle_size }}px;
    color: {{ block.settings.subtitle_color }};
    margin: 0;}

  .ai-collection-slider__wrapper-{{ ai_gen_id }} {
    position: relative;}

  .ai-collection-slider__track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.5s ease;
    gap: {{ block.settings.card_spacing }}px;
  }

  .ai-collection-slider__slide-{{ ai_gen_id }} {
    flex: 0 0 calc((100% - {{ block.settings.card_spacing | times: block.settings.slides_desktop | minus: 1 }}px) / {{ block.settings.slides_desktop }});
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);transition: transform 0.3s ease;
  }

  .ai-collection-slider__slide-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
  }

  .ai-collection-slider__image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: {{ block.settings.image_height }}px;
    overflow: hidden;
  }

  .ai-collection-slider__image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-collection-slider__slide-{{ ai_gen_id }}:hover .ai-collection-slider__image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-collection-slider__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-collection-slider__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-collection-slider__empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 12px;
    border-radius: 4px;
    text-align: center;
    pointer-events: none;
  }

  .ai-collection-slider__content-{{ ai_gen_id }} {
    padding: 24px;
    text-align: {{ block.settings.card_text_alignment }};
  }

  .ai-collection-slider__collection-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.collection_title_size }}px;
    color: {{ block.settings.collection_title_color }};
    margin: 0 0 12px;
    font-weight: 600;
  }

  .ai-collection-slider__collection-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.collection_description_size }}px;
    color: {{ block.settings.collection_description_color }};
    margin: 0 0 20px;
    line-height: 1.5;
  }

  .ai-collection-slider__button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .ai-collection-slider__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-collection-slider__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background-color: {{ block.settings.nav_button_color }};
    color: {{ block.settings.nav_button_text_color }};
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: background-color 0.3s ease, transform 0.2s ease;
    z-index: 2;
  }

  .ai-collection-slider__nav-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.nav_button_hover_color }};
    transform: translateY(-50%) scale(1.1);
  }

  .ai-collection-slider__nav-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: translateY(-50%) scale(1);
  }

  .ai-collection-slider__nav--prev-{{ ai_gen_id }} {
    left: -24px;
  }

  .ai-collection-slider__nav--next-{{ ai_gen_id }} {
    right: -24px;
  }

  .ai-collection-slider__dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 32px;
  }

  .ai-collection-slider__dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_color }};
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .ai-collection-slider__dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
    transform: scale(1.2);
  }

  @media screen and (max-width: 768px) {
    .ai-collection-slider__slide-{{ ai_gen_id }} {
      flex: 0 0 calc((100% - {{ block.settings.card_spacing | times: block.settings.slides_mobile | minus: 1 }}px) / {{ block.settings.slides_mobile }});
    }

    .ai-collection-slider__nav-{{ ai_gen_id }} {
      width: 40px;
      height: 40px;
    }

    .ai-collection-slider__nav--prev-{{ ai_gen_id }} {
      left: -20px;
    }

    .ai-collection-slider__nav--next-{{ ai_gen_id }} {
      right: -20px;
    }

    .ai-collection-slider__content-{{ ai_gen_id }} {
      padding: 16px;
    }
  }
{% endstyle %}<collection-slider-{{ ai_gen_id }}
  class="ai-collection-slider-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-collection-slider__container-{{ ai_gen_id }}">
    {% if block.settings.title != blank or block.settings.subtitle != blank %}
      <div class="ai-collection-slider__header-{{ ai_gen_id }}">
        {% if block.settings.title != blank %}
          <h2 class="ai-collection-slider__title-{{ ai_gen_id }}">{{ block.settings.title }}</h2>
        {% endif %}
        {% if block.settings.subtitle != blank %}
          <p class="ai-collection-slider__subtitle-{{ ai_gen_id }}">{{ block.settings.subtitle }}</p>
        {% endif %}
      </div>
    {% endif %}

    <div class="ai-collection-slider__wrapper-{{ ai_gen_id }}">
      <div class="ai-collection-slider__track-{{ ai_gen_id }}" data-track>
        {% if block.settings.collections != blank %}
          {% for collection in block.settings.collections %}
            <div class="ai-collection-slider__slide-{{ ai_gen_id }}">
              <div class="ai-collection-slider__image-wrapper-{{ ai_gen_id }}">
                {% if collection.featured_image %}
                  <img
                    src="{{ collection.featured_image | image_url: width: 600 }}"
                    alt="{{ collection.featured_image.alt | escape }}"
                    class="ai-collection-slider__image-{{ ai_gen_id }}"
                    loading="lazy"
                    width="600"
                    height="{{ block.settings.image_height }}"
                  >
                {% else %}
                  <div class="ai-collection-slider__image-placeholder-{{ ai_gen_id }}">
                    {{ 'collection-apparel-1' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>
              <div class="ai-collection-slider__content-{{ ai_gen_id }}">
                <h3 class="ai-collection-slider__collection-title-{{ ai_gen_id }}">{{ collection.title }}</h3>
                {% if collection.description != blank %}
                  <p class="ai-collection-slider__collection-description-{{ ai_gen_id }}">
                    {{ collection.description | truncate: 120 }}
                  </p>
                {% endif %}
                <a
                  href="{{ collection.url }}"
                  class="ai-collection-slider__button-{{ ai_gen_id }}"
                >
                  {{ block.settings.button_text }}
                </a>
              </div>
            </div>
          {% endfor %}
        {% else %}
          {% for i in (1..6) %}
            <div class="ai-collection-slider__slide-{{ ai_gen_id }}">
              <div class="ai-collection-slider__image-wrapper-{{ ai_gen_id }}"><div class="ai-collection-slider__image-placeholder-{{ ai_gen_id }}">
                  {{ 'collection-apparel-1' | placeholder_svg_tag }}<div class="ai-collection-slider__empty-state-{{ ai_gen_id }}">
                    Next, add collections
                  </div>
                </div>
              </div>
              <div class="ai-collection-slider__content-{{ ai_gen_id }}">
                <h3 class="ai-collection-slider__collection-title-{{ ai_gen_id }}">Collection {{ i }}</h3>
                <p class="ai-collection-slider__collection-description-{{ ai_gen_id }}">
                  Collection description goes here
                </p>
                <a href="#" class="ai-collection-slider__button-{{ ai_gen_id }}">
                  {{ block.settings.button_text }}
                </a>
              </div>
            </div>
          {% endfor %}
        {% endif %}
      </div>

      {% if block.settings.show_navigation %}
        <button class="ai-collection-slider__nav-{{ ai_gen_id }} ai-collection-slider__nav--prev-{{ ai_gen_id }}" data-prev>
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="15,18 9,12 15,6"></polyline>
          </svg>
        </button>
        <button class="ai-collection-slider__nav-{{ ai_gen_id }} ai-collection-slider__nav--next-{{ ai_gen_id }}" data-next>
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="9,18 15,12 9,6"></polyline>
          </svg>
        </button>
      {% endif %}
    </div>

    {% if block.settings.show_dots %}
      <div class="ai-collection-slider__dots-{{ ai_gen_id }}" data-dots></div>
    {% endif %}
  </div>
</collection-slider-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionSlider{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.slidesDesktop = {{ block.settings.slides_desktop }};
        this.slidesMobile = {{ block.settings.slides_mobile }};
        this.autoplay = {{ block.settings.autoplay }};
        this.autoplaySpeed = {{ block.settings.autoplay_speed | times: 1000 }};
        this.autoplayTimer = null;
      }

      connectedCallback() {
        this.track = this.querySelector('[data-track]');
        this.prevButton = this.querySelector('[data-prev]');
        this.nextButton = this.querySelector('[data-next]');
        this.dotsContainer = this.querySelector('[data-dots]');
        this.slides = this.track.querySelectorAll('.ai-collection-slider__slide-{{ ai_gen_id }}');

        this.init();
      }

      init() {
        this.createDots();
        this.updateSlider();
        this.bindEvents();
        
        if (this.autoplay) {
          this.startAutoplay();
        }
      }

      get slidesPerView() {
        return window.innerWidth <= 768 ? this.slidesMobile : this.slidesDesktop;
      }

      get maxSlide() {
        return Math.max(0, this.slides.length - this.slidesPerView);
      }

      createDots() {
        if (!this.dotsContainer) return;
        
        this.dotsContainer.innerHTML = '';
        const totalDots = this.maxSlide + 1;
        
        for (let i = 0; i < totalDots; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-collection-slider__dot-{{ ai_gen_id }}';
          dot.addEventListener('click', () => this.goToSlide(i));
          this.dotsContainer.appendChild(dot);
        }
      }

      updateSlider() {
        const slideWidth = 100 / this.slidesPerView;
        const translateX = -this.currentSlide * slideWidth;
        
        this.track.style.transform = `translateX(${translateX}%)`;
        
        if (this.prevButton) {
          this.prevButton.disabled = this.currentSlide === 0;
        }
        
        if (this.nextButton) {
          this.nextButton.disabled = this.currentSlide >= this.maxSlide;
        }
        
        this.updateDots();
      }

      updateDots() {
        if (!this.dotsContainer) return;
        
        const dots = this.dotsContainer.querySelectorAll('.ai-collection-slider__dot-{{ ai_gen_id }}');
        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }

      goToSlide(index) {
        this.currentSlide = Math.max(0, Math.min(index, this.maxSlide));
        this.updateSlider();
        this.resetAutoplay();
      }

      nextSlide() {
        if (this.currentSlide < this.maxSlide) {
          this.goToSlide(this.currentSlide + 1);
        } else if (this.autoplay) {
          this.goToSlide(0);
        }
      }

      prevSlide() {
        if (this.currentSlide > 0) {
          this.goToSlide(this.currentSlide - 1);
        }
      }

      startAutoplay() {
        if (!this.autoplay) return;
        
        this.autoplayTimer = setInterval(() => {
          this.nextSlide();
        }, this.autoplaySpeed);
      }

      stopAutoplay() {
        if (this.autoplayTimer) {
          clearInterval(this.autoplayTimer);
          this.autoplayTimer = null;
        }
      }

      resetAutoplay() {
        this.stopAutoplay();
        if (this.autoplay) {
          this.startAutoplay();
        }
      }

      bindEvents() {
        if (this.prevButton) {
          this.prevButton.addEventListener('click', () => this.prevSlide());
        }
        
        if (this.nextButton) {
          this.nextButton.addEventListener('click', () => this.nextSlide());
        }

        window.addEventListener('resize', () => {
          this.createDots();
          this.currentSlide = Math.min(this.currentSlide, this.maxSlide);
          this.updateSlider();
        });

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => {
          if (this.autoplay) this.startAutoplay();
        });
      }

      disconnectedCallback() {
        this.stopAutoplay();
      }
    }

    customElements.define('collection-slider-{{ ai_gen_id }}', CollectionSlider{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection slider",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Shop Collections"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Discover our curated collections"
    },
    {
      "type": "collection_list",
      "id": "collections",
      "label": "Collections",
      "limit": 12
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Shop Collection"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "slides_desktop",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Slides per view (desktop)",
      "default": 3
    },
    {
      "type": "select",
      "id": "slides_mobile",
      "label": "Slides per view (mobile)",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "card_spacing",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Card spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Image height",
      "default": 280
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Header text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "card_text_alignment",
      "label": "Card text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay speed",
      "default": 5
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "subtitle_color",
      "label": "Subtitle color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "collection_title_color",
      "label": "Collection title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "collection_description_color",
      "label": "Collection description color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation button color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_button_text_color",
      "label": "Navigation button text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_button_hover_color",
      "label": "Navigation button hover color",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "dot_color",
      "label": "Dot color",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "font_picker",
      "id": "title_font",
      "label": "Title font",
      "default": "helvetica_n4"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Title size",
      "default": 32
    },
    {
      "type": "range",
      "id": "subtitle_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Subtitle size",
      "default": 16
    },
    {
      "type": "range",
      "id": "collection_title_size",
      "min": 16,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Collection title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "collection_description_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Collection description size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    }
  ],
  "presets": [
    {
      "name": "Collection slider"
    }
  ]
}
{% endschema %}