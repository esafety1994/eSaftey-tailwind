{% if section.settings['show-announcement'] %}
    {{ 'glide.core.min.css' | asset_url | stylesheet_tag }}
<script defer src="{{ 'glide.min.js' | asset_url }}"></script>
  <section
    id="announcement-bar"
    class="bg-bg-light text-center relative transition-all duration-500 ease-in-out transform translate-y-0 opacity-100"
  >
    <!-- Close Button -->
    <button id="announcement-close" class="absolute right-3 top-2  text-neutral-600 focus:outline-none w-5 h-5 cursor-pointer z-10 hover:text-bg-light-red transition-all" aria-label="Close">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-x-icon lucide-circle-x"><circle cx="12" cy="12" r="10"/><path d="m15 9-6 6"/><path d="m9 9 6 6"/></svg>
    </button>
    <!-- Glide.js slider structure -->
    <div class="glide">
      <div class="glide__track" data-glide-el="track">
        <ul class="glide__slides">
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'announcement_content' %}
                <li class="glide__slide py-2 text-xs md:text-sm text-[#333333] font-semibold">
                  {{ block.settings.content }}
                </li>
            {% endcase %}
          {% endfor %}
        </ul>
      </div>
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      new Glide('.glide', {
        type: 'carousel',
        autoplay: 8000,
        animationDuration: 1000,
        perView: 1,
        hoverpause: true
      }).mount();

      var closeBtn = document.getElementById('announcement-close');
      var bar = document.getElementById('announcement-bar');
      closeBtn.addEventListener('click', function () {
        bar.classList.add('opacity-0', '-translate-y-full');
        bar.classList.remove('opacity-100', 'translate-y-0');
        setTimeout(function () {
          bar.style.display = 'none';
        }, 500); // matches transition duration
      });
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Announcement Bar",
  "settings": [
    {
      "type": "checkbox",
      "id": "show-announcement",
      "label": "Show Announcement",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "announcement_content",
      "name": "Annoucment Conent",
      "settings": [
        {
          "type": "text",
          "id": "content",
          "label": "Content",
          "default": "Welcome to our Store"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "announcement-bar"
    }
  ]
}
{% endschema %}